[{"/home/vishnu/Desktop/chatbot/my-app/src/index.js":"1","/home/vishnu/Desktop/chatbot/my-app/src/reportWebVitals.js":"2","/home/vishnu/Desktop/chatbot/my-app/src/App.js":"3","/home/vishnu/Desktop/chatbot/my-app/src/firebase.js":"4","/home/vishnu/Desktop/chatbot/my-app/src/chatapiService.js":"5"},{"size":901,"mtime":1649952556697,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1649926066109,"results":"8","hashOfConfig":"7"},{"size":4281,"mtime":1650108246911,"results":"9","hashOfConfig":"7"},{"size":876,"mtime":1650076632022,"results":"10","hashOfConfig":"7"},{"size":123,"mtime":1650090331648,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"neadw3",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vishnu/Desktop/chatbot/my-app/src/index.js",[],"/home/vishnu/Desktop/chatbot/my-app/src/reportWebVitals.js",[],"/home/vishnu/Desktop/chatbot/my-app/src/App.js",["23","24","25"],"import React ,{useState,useEffect} from 'react';\nimport SendIcon from '@mui/icons-material/Send';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\n\nimport {db} from \"./firebase\"\n\nimport { onSnapshot,doc } from 'firebase/firestore';\n\nimport { v4 as uuidv4 } from 'uuid';\n\n\nimport chatBot from './chatapiService';\n\n\n\nexport default function App({domElement}){\n\n\n    const [showBot,setShowBot]=useState(false);\n\n\n    const [chats,setChats]=useState([])\n\n    const [bot,setBot]=useState({})\n\n\n    const[loading,setLoading]=useState(false)\n\n    const [message,setMessage]=useState()\n\n    const appId=domElement.getAttribute(\"appId\")\n\n    const docRef=doc(db,\"users\",appId)\n\n\n    useEffect(()=>{\n\n      const unsub=onSnapshot(docRef,(snapshot)=>{\n\n            if(snapshot.exists()){\n\n                setBot(snapshot.data().bot)\n\n            }\n\n        console.log(snapshot.data())\n\n\n      })\n\n\n    },[])\n\n\n\n  const getResponse=async(intents,query)=>{\n\n\n    const training_data={\n        'data':{\n            'intents':intents\n        },\n        'query':query\n    }\n\n    \n\n    \n\n    const data=await chatBot.post(\"/predict\",training_data)\n  \n    if(data){\n      setLoading(false)\n    }\n\n    console.log(data)\n   return data.data \n    \n    }\n\n\n    const handleSubmit=async(e)=>{\n        e.preventDefault()\n        console.log(message)\n\n\n      \n  \n        setLoading(true)\n        const data=await getResponse(bot.intents,message)\n\n        console.log(data)\n        setChats([...chats,{id:uuidv4(),message:message,bot:false},{id:uuidv4(),message:data.reply,bot:true}])\n\n        setMessage(\"\")\n\n    \n\n    }\n  \n    return (\n      <div>\n      \n      {showBot&&\n      <div className='flex flex-col  h-full w-full z-50  fixed right-0 bottom-0 top-0  justify-start  bg-white border self-end md:w-1/3 top-auto lg:h-3/4 px-0 py-0'>\n        \n        {/* Chatbot Header */}\n  \n        <div className=\"flex justify-between items-center w-full p-4   bg-gradient-to-r from-blue-500 to-indigo-800 \">\n          <h1 className=\"text-2xl font-extrabold text-gray-50\">{bot?.name}</h1>\n\n          <button className=\"text-2xl font-extrabold text-gray-50 \" onClick={()=>{setShowBot(false)}}><MoreHorizIcon style={{fontSize:\"2.5rem\"}}/></button>\n  \n       \n          </div>\n  \n          \n        {/* Chatbot Content Section */}\n  \n          <div className=\"flex relative top-0 bottom-50 w-full h-full flex-col overflow-y-auto  p-10\">\n  \n\n          {chats.map((chat)=>{\n\n                return <Chat key={chat.id} bot={chat.bot} content={chat.message}/>\n\n\n          })}\n\n          {loading&&<>\n            \n            <Chat key={uuidv4()} bot={false} content={message}/>\n            <Chat key={uuidv4()} bot={true} content={null}/>\n\n            </>}\n\n\n        \n\n          </div>\n  \n  \n               {/* Chatbot Input Section */}\n  \n          <div className=\"flex justify-evenly bottom-0  w-full relative border-t border-gray-300 bg-gray-50\">\n    \n          <input type=\"text\" className=\"p-5 h-full w-full outline-none  rounded-lg text-lg md:text-xl\" value={message} placeholder=\"Type a Message\" onChange={(e)=>{setMessage(e.target.value)}}/>\n          {message&&<button type=\"submit\" className=\"relative py-2 px-4 rounded-full  drop-shadow cursor-pointer\" onClick={handleSubmit}><SendIcon style={{fontSize:\"2rem\",color:\"blue\"}}/></button>}\n\n          </div>\n      \n  \n        </div>}\n  \n               {/* Chatbot Show */}\n        \n        {!showBot&&<button className=\"bg-gradient-to-r from-blue-500 to-indigo-800 px-5 py-3 rounded-full text-2xl font-bold fixed bottom-5 right-5 z-50\" onClick={()=>{setShowBot(!showBot)}}>\n            <h1>Z</h1>\n          </button>}\n  \n  \n          \n  \n  \n      </div>\n    )\n\n}\n\nfunction Chat({content,bot}){\n\nconst [loading,setLoading]=useState(true)\n\n\nuseEffect(()=>{\n\n  if(content){\n    setLoading(false)\n  }\n\n},[])\n\n  return <div className={bot?\"flex flex-wrap  text-gray-100  p-3 max-w-xs m-2 bg-gradient-to-r from-blue-500 to-indigo-800 rounded-tl-2xl rounded-br-2xl rounded-tr-2xl self-start\":\"flex flex-wrap max-w-xs p-5 m-2 bg-gray-200 border rounded-tl-2xl rounded-tr-2xl rounded-bl-2xl self-end\"}>\n      \n    {loading?<p className='text-sm font-medium lg:text-lg'>...</p>:<p className=\"text-sm font-medium lg:text-lg\">{content}</p>}\n     \n    </div>\n\n\n\n\n\n}","/home/vishnu/Desktop/chatbot/my-app/src/firebase.js",[],"/home/vishnu/Desktop/chatbot/my-app/src/chatapiService.js",[],{"ruleId":"26","severity":1,"message":"27","line":38,"column":13,"nodeType":"28","messageId":"29","endLine":38,"endColumn":18},{"ruleId":"30","severity":1,"message":"31","line":52,"column":7,"nodeType":"32","endLine":52,"endColumn":9,"suggestions":"33"},{"ruleId":"30","severity":1,"message":"34","line":181,"column":3,"nodeType":"32","endLine":181,"endColumn":5,"suggestions":"35"},"no-unused-vars","'unsub' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'docRef'. Either include it or remove the dependency array.","ArrayExpression",["36"],"React Hook useEffect has a missing dependency: 'content'. Either include it or remove the dependency array.",["37"],{"desc":"38","fix":"39"},{"desc":"40","fix":"41"},"Update the dependencies array to be: [docRef]",{"range":"42","text":"43"},"Update the dependencies array to be: [content]",{"range":"44","text":"45"},[904,906],"[docRef]",[3829,3831],"[content]"]