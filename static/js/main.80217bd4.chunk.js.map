{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","showBot","setShowBot","typing","setTyping","className","onClick","style","fontSize","Chat","content","bot","type","placeholder","onChange","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WidgetDivs","document","querySelectorAll","console","log","forEach","Div","ReactDOM","render","StrictMode","domElement"],"mappings":"sOAIe,SAASA,IAGpB,MAA2BC,oBAAS,GAApC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAyBF,oBAAS,GAAlC,mBAAOG,EAAP,KAAcC,EAAd,KAEA,OACE,gCAECH,GACD,sBAAKI,UAAU,gKAAf,UAIE,sBAAKA,UAAU,8FAAf,UACE,oBAAIA,UAAU,uCAAd,mBACA,wBAAQA,UAAU,wCAAwCC,QAAS,WAAKJ,GAAW,IAAnF,SAA4F,cAAC,IAAD,CAAeK,MAAO,CAACC,SAAS,iBAQ5H,sBAAKH,UAAU,6EAAf,UAEA,cAACI,EAAD,CAAMC,QAAQ,oBAAoBC,KAAK,IACvC,cAACF,EAAD,CAAMC,QAAQ,gBAAgBC,KAAK,IACnC,cAACF,EAAD,CAAMC,QAAQ,iLAAiLC,KAAK,IACpM,cAACF,EAAD,CAAMC,QAAQ,iLAAiLC,KAAK,IACpM,cAACF,EAAD,CAAMC,QAAQ,iLAAiLC,KAAK,IACpM,cAACF,EAAD,CAAMC,QAAQ,iLAAiLC,KAAK,OAQpM,sBAAKN,UAAU,oFAAf,UACA,uBAAOO,KAAK,OAAOP,UAAU,+DAA+DQ,YAAY,iBAAiBC,SAAU,WAAKV,GAAU,MACjJD,GAAQ,wBAAQE,UAAU,sBAAlB,SAAwC,cAAC,IAAD,CAAUE,MAAO,CAACC,SAAS,OAAOO,MAAM,mBAQzFd,GAAS,wBAAQI,UAAU,qHAAqHC,QAAS,WAAKJ,GAAYD,IAAjK,SACP,wCAYZ,SAASQ,EAAT,GAA6B,IAAdC,EAAa,EAAbA,QAAQC,EAAK,EAALA,IAIrB,OAAO,qBAAKN,UAAWM,EAAI,uJAAuJ,2GAA3K,SAEH,mBAAGN,UAAU,+BAAb,SAA6CK,MCxEnD,IAYeM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCARQ,EAAWC,SAASC,iBAAiB,YAE3CC,QAAQC,IAAIJ,GAKZA,EAAWK,SAAQ,SAAAC,GAEjB,OAAOC,IAASC,OACZ,cAAC,IAAMC,WAAP,UACA,cAACnC,EAAD,CAAKoC,WAAYJ,MAEnBA,MAcJf,M","file":"static/js/main.80217bd4.chunk.js","sourcesContent":["import React ,{useState,useEffect} from 'react';\nimport SendIcon from '@mui/icons-material/Send';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\n\nexport default function App(){\n\n\n    const [showBot,setShowBot]=useState(false);\n    const [typing,setTyping]=useState(false)\n  \n    return (\n      <div>\n      \n      {showBot&&\n      <div className='flex flex-col  h-full w-full z-50 px-5 py-10 fixed right-0 bottom-0 top-0  justify-start  bg-white  drop-shadow self-end md:w-1/3 top-auto lg:h-3/4 px-0 py-0'>\n        \n        {/* Chatbot Header */}\n  \n        <div className=\"flex justify-between items-center w-full p-4   bg-gradient-to-r from-blue-500 to-indigo-800\">\n          <h1 className=\"text-2xl font-extrabold text-gray-50\">BOT Z</h1>\n          <button className=\"text-2xl font-extrabold text-gray-50 \" onClick={()=>{setShowBot(false)}}><MoreHorizIcon style={{fontSize:\"2.5rem\"}}/></button>\n  \n       \n          </div>\n  \n          \n        {/* Chatbot Content Section */}\n  \n          <div className=\"flex relative top-0 bottom-50 w-full h-full flex-col overflow-y-auto  p-10\">\n  \n          <Chat content='Machine Learning ' bot={true}/>\n          <Chat content='Deep Learning' bot={false}/>\n          <Chat content=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ac ligula in lorem porttitor elementum. Integer condimentum vehicula odio, at ornare ante porttitor eu.  \" bot={false}/>\n          <Chat content=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ac ligula in lorem porttitor elementum. Integer condimentum vehicula odio, at ornare ante porttitor eu.  \" bot={true}/>\n          <Chat content=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ac ligula in lorem porttitor elementum. Integer condimentum vehicula odio, at ornare ante porttitor eu.  \" bot={false}/>\n          <Chat content=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ac ligula in lorem porttitor elementum. Integer condimentum vehicula odio, at ornare ante porttitor eu.  \" bot={true}/>\n  \n  \n          </div>\n  \n  \n               {/* Chatbot Input Section */}\n  \n          <div className=\"flex justify-evenly bottom-0  w-full relative border-t border-gray-300 bg-gray-50\">\n          <input type=\"text\" className=\"p-5 h-full w-3/4 outline-none  rounded-lg text-lg md:text-xl\" placeholder=\"Type a Message\" onChange={()=>{setTyping(true)}}/>\n          {typing&&<button className=\"relative py-2 px-4 \"><SendIcon style={{fontSize:\"2rem\",color:\"blue\"}}/></button>}\n          </div>\n      \n  \n        </div>}\n  \n               {/* Chatbot Show */}\n        \n        {!showBot&&<button className=\"bg-gradient-to-r from-blue-500 to-indigo-800 px-5 py-3 rounded-full text-2xl font-bold fixed bottom-5 right-5 z-50\" onClick={()=>{setShowBot(!showBot)}}>\n            <h1>Z</h1>\n          </button>}\n  \n  \n          \n  \n  \n      </div>\n    )\n\n}\n\nfunction Chat({content,bot}){\n\n\n\n  return <div className={bot?\"flex flex-wrap  text-gray-100  p-3 max-w-xs m-2 bg-gradient-to-r from-blue-500 to-indigo-800 rounded-tl-2xl rounded-br-2xl rounded-tr-2xl self-start\":\"flex flex-wrap max-w-xs p-5 m-2 bg-gray-200 border rounded-tl-2xl rounded-tr-2xl rounded-bl-2xl self-end\"}>\n      \n      <p className=\"text-sm font-bold lg:text-lg\">{content}</p>\n  </div>\n\n\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//const root = ReactDOM.createRoot(document.getElementById('root'));\nconst WidgetDivs=document.querySelectorAll(\".chatbot\")\n\nconsole.log(WidgetDivs)\n\n//const WidgetDivs = document.querySelectorAll('.reddit_widget')\n\n//Inject our React App into each\nWidgetDivs.forEach(Div=> {\n  \n  return ReactDOM.render(\n      <React.StrictMode>\n      <App domElement={Div}/>\n      </React.StrictMode>,\n    Div\n  );\n})\n\n\n// root.render(\n//   <React.StrictMode>\n//     <App domElement={chatbot}/>\n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}